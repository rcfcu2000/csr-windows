<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attach="clr-namespace:csr_windows.Resources.AttachProperties"
    xmlns:controls="clr-namespace:csr_windows.Resources.Controls"
    xmlns:hc="https://handyorg.github.io/handycontrol">

    <!--  图片button  -->
    <Style TargetType="{x:Type controls:ImageButton}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ImageButton}">
                    <Image
                        x:Name="PART_Image"
                        RenderOptions.BitmapScalingMode="NearestNeighbor"
                        SnapsToDevicePixels="True"
                        Source="{TemplateBinding NormalImageSource}" />
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding Path=EnableImageSource, RelativeSource={RelativeSource Self}, Converter={StaticResource IsNull}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=EnableImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding Path=EnableImageSource, RelativeSource={RelativeSource Self}, Converter={StaticResource IsNull}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.7" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding Path=MouseOverImageSource, RelativeSource={RelativeSource Self}, Converter={StaticResource IsNull}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=MouseOverImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding Path=MouseOverImageSource, RelativeSource={RelativeSource Self}, Converter={StaticResource IsNull}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.9" />
                        </MultiDataTrigger>


                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=MouseOverPressedImageSource, RelativeSource={RelativeSource Self}, Converter={StaticResource IsNull}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Image" Property="Source" Value="{Binding Path=MouseOverPressedImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=MouseOverPressedImageSource, RelativeSource={RelativeSource Self}, Converter={StaticResource IsNull}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.8" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainImageButton" TargetType="{x:Type controls:ImageButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ImageButton}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <Image
                            x:Name="PART_Image"
                            Width="16"
                            Height="16"
                            RenderOptions.BitmapScalingMode="NearestNeighbor"
                            SnapsToDevicePixels="True"
                            Source="{TemplateBinding NormalImageSource}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(attach:MouseDependencyProperty.OverBackColor), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(attach:MouseDependencyProperty.PressedColor), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <Style x:Key="PrimaryImageContentButton" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Border.CornerRadius" Value="5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border
                            x:Name="bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            Opacity="{TemplateBinding Opacity}"
                            SnapsToDevicePixels="True">
                            <StackPanel
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                                <Image
                                    x:Name="image"
                                    Width="{TemplateBinding attach:IconProperties.IconWidth}"
                                    Height="{TemplateBinding attach:IconProperties.IconHeight}"
                                    Margin="{TemplateBinding attach:IconProperties.IconThickness}"
                                    VerticalAlignment="Center"
                                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                                    SnapsToDevicePixels="True"
                                    Source="{Binding Path=(attach:IconProperties.IconUrl), RelativeSource={RelativeSource TemplatedParent}}" />
                                <TextBlock
                                    x:Name="cp"
                                    VerticalAlignment="Center"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="{TemplateBinding Foreground}"
                                    TextDecorations="{TemplateBinding TextBlock.TextDecorations}">
                                    <ContentPresenter />
                                </TextBlock>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="cp" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <!--<Trigger Property="attach:IconProperties.IconUrl" Value="{x:Null}">
                            <Setter TargetName="image" Property="Visibility" Value="Collapsed" />
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Opacity" Value=".9" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Opacity" Value=".6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bd" Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="ColorChangedButtonStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="Button">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="Chrome"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Visible" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value=".9" />
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=(attach:MouseDependencyProperty.OverBackColor), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value=".6" />
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=(attach:MouseDependencyProperty.PressedColor), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=(attach:MouseDependencyProperty.EnableColor), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ColorChangedImageButtonStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="Button">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="Chrome"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Image
                                x:Name="image"
                                Width="{TemplateBinding attach:IconProperties.IconWidth}"
                                Height="{TemplateBinding attach:IconProperties.IconHeight}"
                                Margin="{TemplateBinding attach:IconProperties.IconThickness}"
                                VerticalAlignment="Center"
                                RenderOptions.BitmapScalingMode="NearestNeighbor"
                                SnapsToDevicePixels="True"
                                Source="{Binding Path=(attach:IconProperties.IconUrl), RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Visible" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value=".9" />
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=(attach:MouseDependencyProperty.OverBackColor), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value=".6" />
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=(attach:MouseDependencyProperty.PressedColor), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=(attach:MouseDependencyProperty.EnableColor), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>